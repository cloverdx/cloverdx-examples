<?xml version="1.0" encoding="UTF-8"?>
<Graph author="Honza" created="Wed Oct 05 11:03:29 CEST 2022" guiVersion="7.1.2.4" id="1665127014040" licenseCode="CLCDSCLOVE24765514SP" name="DQExample1" showComponentDetails="true">
<Global>
<Metadata id="Metadata1">
<Record fieldDelimiter="," name="CountryAggregations" previewAttachmentCharset="UTF-8" recordDelimiter="\r\n" type="delimited">
<Field label="Country" name="country" type="string"/>
<Field label="Not Null Count" name="notNullCount" type="integer"/>
<Field label="Total Record Count" name="recordCount" type="integer"/>
<Field label="Not Null Count Percentage" name="notNullCountPercentage" type="integer"/>
</Record>
</Metadata>
<Metadata id="Metadata0">
<Record fieldDelimiter=";" name="Customers" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\n" recordSize="-1" type="delimited">
<Field eofAsDelimiter="false" name="customerid" nullable="true" shift="0" size="0" type="integer"/>
<Field eofAsDelimiter="false" name="firstname" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="lastname" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="address1" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="address2" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="city" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="state" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="zip" nullable="true" shift="0" size="0" type="integer"/>
<Field eofAsDelimiter="false" name="country" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="region" nullable="true" shift="0" size="0" type="integer"/>
<Field eofAsDelimiter="false" name="email" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="phone" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="creditcardtype" nullable="true" shift="0" size="0" type="integer"/>
<Field eofAsDelimiter="false" name="creditcard" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="creditcardexpiration" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="username" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="password" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="age" nullable="true" shift="0" size="0" type="integer"/>
<Field eofAsDelimiter="false" name="income" nullable="true" shift="0" size="0" type="integer"/>
<Field eofAsDelimiter="false" name="gender" nullable="true" shift="0" size="0" type="string"/>
</Record>
</Metadata>
<GraphParameters>
<GraphParameterFile fileURL="workspace.prm"/>
</GraphParameters>
<RichTextNote backgroundColor="444444" folded="false" fontSize="medium" height="127" id="Note0" textColor="FFFFFF" width="1751" x="100" y="25">
<attr name="text"><![CDATA[h3. Custom data quality using coding approach
In some use cases, you may prefer creating custom data quality logic; such logic can be built either using multiple of prebuilt components or in some components you can even create your own custom code (CTL or Java etc.).]]></attr>
</RichTextNote>
<RichTextNote backgroundColor="FAF6D6" folded="false" fontSize="medium" height="527" id="Note1" textColor="444444" width="1751" x="100" y="150">
<attr name="text"><![CDATA[h3. Combination of available components and custom coding
- components used are just subset of the components available in the pallet, but of course any other components can be used as well in order to reach reuqired data quality goal
- in case you miss some component in the pallet, it can be custom built]]></attr>
</RichTextNote>
<Dictionary/>
</Global>
<Phase number="0">
<Node guiName="Count percentage of NOT NULL records" guiX="920" guiY="500" id="COUNT_PERCENTAGE_OF_NOT_NULL_RECORDS" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$out.0.* = $in.0.*;
	$out.0.notNullCountPercentage = $in.0.notNullCount / $in.0.recordCount * 100;

	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Node dataPolicy="controlled" fileURL="${DATAIN_DIR}/Customers.csv" guiName="Customers" guiX="170" guiY="325" id="CUSTOMERS" type="FLAT_FILE_READER"/>
<Node fileURL="${DATAOUT_DIR}/CustomersWithInvalidPhoneNumbers.csv" guiName="Customer with invalid phone" guiX="1595" guiY="500" id="CUSTOMER_WITH_INVALID_PHONE" makeDirs="true" outputFieldNames="true" type="FLAT_FILE_WRITER"/>
<Node fileURL="${DATAOUT_DIR}/CustomersWithValidPhoneNumbers.csv" guiName="Customer with valid phone" guiX="1620" guiY="325" id="CUSTOMER_WITH_VALID_PHONE" makeDirs="true" type="FLAT_FILE_WRITER"/>
<Node fileURL="${DATAOUT_DIR}/CustomProfilingResults.csv" guiName="Custom Profiling Results" guiX="1245" guiY="500" id="CUSTOM_PROFILING_RESULTS" type="FLAT_FILE_WRITER"/>
<Node fileURL="${DATAOUT_DIR}/log/InvalidCustomers.log" guiName="Log invalid customers" guiX="395" guiY="500" id="LOG_INVALID_CUSTOMERS" makeDirs="true" outputFieldNames="true" type="FLAT_FILE_WRITER"/>
<Node guiName="Phone number validation" guiX="1245" guiY="325" id="PHONE_NUMBER_VALIDATION" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// This is rather uncommon approach, but gives you additional flexiblity 
// or you can use it if you prefer to use coding approach instead of visual design
function integer transform() {
	
	// This is just an example of a CTL code, it can be far more complex if needed
	
	// Must be number and start with numbers between 5 and 9
	if (isLong(trim($in.0.phone)) && $in.0.phone ~= "^[5-9].*") {
		$out.0.* = $in.0.*;
		// return value is index of the output port (0 = first output port of the component)
		return 0; 
	} else {
		// if above condition returns false, we will map original data to second output port 
		$out.1.* = $in.0.*;
		// return value is index of the output port (1 = second output port of the component
		return 1;
	}

}
]]></attr>
<attr name="guiDescription"><![CDATA[Custom validation check - phone number must be a whole number and start with numbers 5 - 9]]></attr>
</Node>
<Node aggregateKey="country" guiName="Profiling Aggregation per Country" guiX="620" guiY="500" id="PROFILING_AGGREGATION_PER_COUNTRY" mapping="$country:=$country;$notNullCount:=countnonnull($creditcard);$recordCount:=count();" sorted="false" type="AGGREGATE"/>
<Node guiName="SimpleCopy" guiX="395" guiY="325" id="SIMPLE_COPY" type="SIMPLE_COPY"/>
<Edge fromNode="COUNT_PERCENTAGE_OF_NOT_NULL_RECORDS:0" guiBendpoints="" guiRouter="Manhattan" id="Edge10" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" toNode="CUSTOM_PROFILING_RESULTS:0"/>
<Edge fromNode="CUSTOMERS:0" guiBendpoints="" guiRouter="Manhattan" id="Edge3" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" toNode="SIMPLE_COPY:0"/>
<Edge fromNode="CUSTOMERS:1" guiBendpoints="" guiRouter="Manhattan" id="Edge4" inPort="Port 0 (in)" outPort="Port 1 (logs)" toNode="LOG_INVALID_CUSTOMERS:0"/>
<Edge fromNode="PHONE_NUMBER_VALIDATION:0" guiBendpoints="" guiRouter="Manhattan" id="Edge13" inPort="Port 0 (in)" outPort="Port 0 (out)" toNode="CUSTOMER_WITH_VALID_PHONE:0"/>
<Edge fromNode="PHONE_NUMBER_VALIDATION:1" guiBendpoints="" guiRouter="Manhattan" id="Edge14" inPort="Port 0 (in)" outPort="Port 1 (out)" toNode="CUSTOMER_WITH_INVALID_PHONE:0"/>
<Edge fromNode="PROFILING_AGGREGATION_PER_COUNTRY:0" guiBendpoints="" guiRouter="Manhattan" id="Edge9" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" toNode="COUNT_PERCENTAGE_OF_NOT_NULL_RECORDS:0"/>
<Edge fromNode="SIMPLE_COPY:0" guiBendpoints="" guiRouter="Manhattan" id="Edge5" inPort="Port 0 (in)" outPort="Port 0 (out)" toNode="PHONE_NUMBER_VALIDATION:0"/>
<Edge fromNode="SIMPLE_COPY:1" guiBendpoints="" guiRouter="Manhattan" id="Edge8" inPort="Port 0 (in)" outPort="Port 1 (out)" toNode="PROFILING_AGGREGATION_PER_COUNTRY:0"/>
</Phase>
</Graph>
